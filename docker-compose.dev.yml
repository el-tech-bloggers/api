version: "3.8"
services:
  api:
    build:
      context: ./
      dockerfile: ./development.dockerfile
    depends_on:
      db:
        condition: service_started
      migrator:
        condition: service_completed_successfully
    ports:
      - 5000:5000
    volumes:
      - ./:/app
    restart: always
    environment:
      PORT: :5000
      DB_URL: postgres://postgres:pewpew@db:5432/eltech-bloggers

  db:
    image: postgres:16.2
    container_name: postgres
    ports:
      - 5432:5432
    user: postgres
    environment:
      # PGUSER: postgres
      POSTGRES_PASSWORD: pewpew
      POSTGRES_DB: eltech-bloggers
      restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 10s
      retries: 5432

  migrator:
    build:
      context: .
      dockerfile: ./Dockerfile.migration
    depends_on:
      db:
        condition: service_healthy
    environment:
      TERN_CONFIG: ./tern.conf
      TERN_MIGRATIONS: ./migrations/
      POSTGRES_PASSWORD: pewpew
      POSTGRES_DB: eltech-bloggers
      POSTGRES_HOST: db
      # TODO: passs hashed passwords
      ADMIN1_PASSWORD: pewpew
      ADMIN2_PASSWORD: pewpew

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
